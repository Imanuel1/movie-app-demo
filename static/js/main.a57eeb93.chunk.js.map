{"version":3,"sources":["components/ActorCard/ActorCard.js","model/ActorModel.js","components/SearchBox/SearchBox.js","model/MovieModel.js","components/MovieCard/MovieCard.js","pages/ActorsPage/ActorsPage.js","App.js","reportWebVitals.js","index.js"],"names":["ActorCard","actor","className","Card","Img","variant","src","img","Body","Title","href","imdb","target","Text","age","ActorModel","plainActor","lname","birth","this","fname","getAge","birthDate","Date","diff","getTime","Math","floor","SearchBox","placeholder","searchText","onSearchChange","results","onResultSelected","Form","Control","type","value","onChange","e","ListGroup","map","result","index","Item","action","onClick","MovieModel","name","length","director","mainStars","person","character","MovieCard","movie","ActorsPage","useEffect","console","log","axios","get","process","concat","then","response","data","setActors","catch","error","React","useState","actors","filterText","setfilterText","sortBy","setSortBy","filteredActors","filter","toLowerCase","includes","sort","actor1","actor2","movies","setMovies","setSearchText","setResults","Container","Row","Group","sm","as","Col","controlId","lg","md","newSearchText","searchURL","original_title","movieId","id","MovieLength","runtime","title","posters","file_path","backdrops","cast","crew","known_for_department","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a57eeb93.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport './ActorCard.css'\r\n\r\nexport default function ActorCard({actor}) {\r\n    return (\r\n    <div className=\"c-actor-card\">\r\n        <Card >\r\n            <Card.Img variant=\"top\" src={actor.img} />\r\n            <Card.Body>\r\n                <Card.Title>\r\n                    <a href={actor.imdb} target=\"_blank\">\r\n                        {`${actor[\"fname\"]} ${actor[\"lname\"]}`}\r\n                    </a>\r\n                </Card.Title>\r\n                <Card.Text>\r\n                    {actor.age}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    </div>\r\n    )\r\n}\r\n","\r\nclass ActorModel{\r\n    constructor(plainActor, lname, birth, img, imdb){\r\n        if( typeof plainActor === 'object'){\r\n            this.fname = plainActor.fname;\r\n            this.lname = plainActor.lname;\r\n            this.birth = plainActor.birth;\r\n            this.img = plainActor.img;\r\n            this.imdb = plainActor.imdb;\r\n        } else {\r\n            this.fname = plainActor;\r\n            this.lname = lname;\r\n            this.birth = birth;\r\n            this.img = img;\r\n            this.imdb = imdb;\r\n        }\r\n        this.age = this.getAge(this.birth);\r\n    }\r\n\r\n    getAge(birth) {\r\n        const birthDate = new Date(birth);\r\n        const today = new Date();\r\n        const diff = today.getTime() - birthDate.getTime();\r\n        return Math.floor(diff / (1000 * 60 * 60 * 24 * 365.25));\r\n    }\r\n}\r\n\r\nexport default ActorModel","import React from 'react';\r\nimport { Form, ListGroup } from 'react-bootstrap';\r\nimport './SearchBox.css'\r\n\r\nfunction SearchBox({placeholder, searchText, onSearchChange, results, onResultSelected}) {\r\n    return (\r\n        <div className=\"c-searchbox\">\r\n            <Form.Control type=\"text\" placeholder={placeholder} value={searchText} \r\n                onChange={e => onSearchChange(e.target.value)}/>\r\n            <ListGroup className=\"result-box\">\r\n                {results.map((result, index) => \r\n                    <ListGroup.Item action onClick={() => onResultSelected(index)}>\r\n                        {result}\r\n                    </ListGroup.Item>)}\r\n            </ListGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","export default class MovieModel {\r\n    constructor(name, length, img, director, mainStars){\r\n        this.name = name;\r\n        this.length = length + \" minutes\";\r\n        this.img = img===\"\"? \"\" : \"https://image.tmdb.org/t/p/w500\"+img;\r\n        this.director = director.map(person => person.name +\" \");\r\n        this.mainStars = mainStars.map(person => person.name + \" (\"+ person.character+\") \");\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport \"./MovieCard.css\"\r\n\r\nfunction MovieCard({movie}) {\r\n    return (\r\n        <div className=\"c-movie-card\">\r\n            <Card className=\"c-card\">\r\n                <Card.Img variant=\"top\" src={movie.img} />\r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        {movie.name}\r\n                    </Card.Title>\r\n                    <Card.Text>\r\n                        {\"Time: \" + movie.length}\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                        {\"Directors: \" + movie.director}\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                        {\"Main Stars: \"+ movie.mainStars}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieCard;","import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Col, Container, Form, Row } from 'react-bootstrap'\r\nimport ActorCard from '../../components/ActorCard/ActorCard'\r\nimport './ActorsPage.css'\r\nimport ActorModel from '../../model/ActorModel'\r\nimport SearchBox from '../../components/SearchBox/SearchBox'\r\nimport MovieModel from '../../model/MovieModel'\r\nimport MovieCard from '../../components/MovieCard/MovieCard'\r\n\r\nexport default function ActorsPage() {\r\n    //option 1 - to read data from array's object\r\n    // const actorsData= [ new ActorModel({\r\n    //     \"fname\": \"Bard\",\r\n    //     \"lname\": \"Pitt\",\r\n    //     birth: \"1963-12-18\",\r\n    //     img:\"https://www.theplace2.ru/cache/archive/bred_pitt/img/brad_pitt_2-gthumb-gwdata1200-ghdata1200-gfitdatamax.jpg\",\r\n    //     imdb: \"https://www.imdb.com/name/nm0000093/?ref_=nv_sr_srsg_0\"\r\n    //     })\r\n    // ,new ActorModel({\r\n    //     \"fname\": \"Allison\",\r\n    //     \"lname\": \"Mack\",\r\n    //     birth: \"1982-7-29\",\r\n    //     img:\"https://m.media-amazon.com/images/M/MV5BMTkxOTI4NDIzM15BMl5BanBnXkFtZTcwOTk3Mzc5Mg@@._V1_.jpg\",\r\n    //     imdb: \"https://www.imdb.com/name/nm0532928/?ref_=nm_mv_close\"\r\n    // }),\r\n    // new ActorModel({   \r\n    //     \"fname\": \"Tom\",\r\n    //     \"lname\": \"Cruise\",\r\n    //     birth: \"1962/07/03\",\r\n    //     img: \"https://www.lecturas.com/medio/2018/10/05/tom-cruise_c56207ff_800x1200.jpg\",\r\n    //     imdb: \"https://www.imdb.com/name/nm0000129/?ref_=nmmi_mi_nm\"\r\n    // }),\r\n    // new ActorModel({\r\n    //     \"fname\": \"Christian\",\r\n    //     \"lname\": \"Bale\",\r\n    //     birth: \"1974/01/30\",\r\n    //     img: \"https://www.theplace2.ru/cache/archive/christian_bale/img/546425_wayne2-gthumb-gwdata1200-ghdata1200-gfitdatamax.jpg\",\r\n    //     imdb: \"https://www.imdb.com/name/nm0000288/?ref_=tt_cl_t1\"\r\n    // }),\r\n    // new ActorModel({\r\n    //     \"fname\": \"Gal\",\r\n    //     \"lname\": \"Gadot\",\r\n    //     birth: \"1985/04/30\",\r\n    //     img: \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/gal-gadot-attends-the-2020-vanity-fair-oscar-party-hosted-news-photo-1587592214.jpg\",\r\n    //     imdb: \"https://www.imdb.com/name/nm2933757/?ref_=fn_al_nm_1\"\r\n    // }),\r\n    // new ActorModel({\r\n    //     \"fname\": \"Uma\",\r\n    //     \"lname\": \"Thurman\",\r\n    //     birth: \"1970/04/29\",\r\n    //     img: \"https://www.theplace2.ru/cache/archive/uma_thurman/img/Uma_Turman1-gthumb-gwdata1200-ghdata1200-gfitdatamax.jpg\",\r\n    //     imdb: \"https://www.imdb.com/name/nm0000235/?ref_=tt_cl_t15\"\r\n    // }),\r\n    // new ActorModel({\r\n    //     \"fname\": \"Diane\",\r\n    //     \"lname\": \"Keaton\",\r\n    //     birth: \"1946/01/05\",\r\n    //     img: \"https://www.kino.dk/sites/default/files/primary-pictures/dianekeaton.jpg\",\r\n    //     imdb: \"https://www.imdb.com/name/nm0000473/?ref_=tt_cl_t10\"\r\n    // }),\r\n    // new ActorModel({\r\n    //     \"fname\": \"Tom\",\r\n    //     \"lname\": \"Hanks\",\r\n    //     birth: \"1956/07/09\",\r\n    //     img: \"https://us.hola.com/imagenes/es/celebrities/2019032122293/tom-hanks-sorpresa-cumpleanos/0-168-324/tom-hanks-1a-a.jpg\",\r\n    //     imdb: \"https://www.imdb.com/name/nm0000158/?ref_=tt_cl_t1\"\r\n    // }),\r\n    // new ActorModel({\r\n    //     \"fname\": \"Cate\",\r\n    //     \"lname\": \"Blanchett\",\r\n    //     birth: \"1969/05/14\",\r\n    //     img: \"https://i.pinimg.com/originals/ed/a1/36/eda136c1a14124e3bdb7dc504ee2d947.jpg\",\r\n    //     imdb: \"https://www.imdb.com/name/nm0000949/?ref_=tt_cl_t10\"\r\n    // })];\r\n    \r\n    // console.log(actorsData);\r\n\r\n    //before mounting - fetch data from json only once the component is mounting \r\n    useEffect(() => {\r\n        console.log(\"actor,json\");\r\n        const pathPre = process.env.PUBLIC_URL;\r\n        axios.get(pathPre.concat(\"/actor.json\")).then(response => {\r\n            console.log(response.data);\r\n            setActors(response.data.map(plainActor => new ActorModel(plainActor)))\r\n        }).catch(error => console.error(error));\r\n    }, []);\r\n\r\n    //axios call to get json data\r\n\r\n\r\n    const [actors, setActors] = React.useState([]);\r\n    const [filterText, setfilterText] = React.useState(\"\");\r\n    const [sortBy, setSortBy] = React.useState(\"fname\");\r\n\r\n    //1) filter the actors based on the filterText\r\n    const filteredActors = actors.filter( actor =>\r\n        //case insensetive: option 1 - without Regex - ((actor) => );\r\n        actor[\"fname\"].toLowerCase().includes(filterText.toLowerCase()) ||\r\n        actor[\"lname\"].toLowerCase().includes(filterText.toLowerCase()));\r\n    \r\n    //2) sort the actors array\r\n    filteredActors.sort((actor1, actor2) => {\r\n        if(actor1[sortBy] > actor2[sortBy]){\r\n            return 1;\r\n        } else if (actor1[sortBy] < actor2[sortBy]) {\r\n            return -1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    //add movie search section\r\n    const [movies, setMovies] = useState([]);\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [results, setResults] = useState([]);\r\n\r\n    function handleSearchChange(newSearchText) {\r\n        setSearchText(newSearchText);\r\n\r\n        if(newSearchText){\r\n            const searchURL = \"https://api.themoviedb.org/3/search/movie?api_key=09848168e2201726ba2c5e6a70d11ac7&language=en-US&query=\" + newSearchText;\r\n            axios.get(searchURL).then( response =>\r\n                setResults(response.data.results)\r\n            );\r\n        } else {\r\n            setResults([]);\r\n        }\r\n    }\r\n    \r\n    function addMovie(index) {\r\n        const movieId = results[index].id;\r\n        console.log(\"movie id: \"+movieId);\r\n        const searchURL = \"https://api.themoviedb.org/3/movie/\"+movieId+\"?api_key=09848168e2201726ba2c5e6a70d11ac7&language=en-US\";\r\n        let MovieLength=0;\r\n        let img=\"\";\r\n        let actor =[];\r\n        let director =[];\r\n        axios.get(searchURL).then(response =>{\r\n            MovieLength= response.data.runtime;\r\n            console.log(MovieLength);\r\n            setMovies(movies.concat(new MovieModel(results[index].title, MovieLength ,img,director,actor)));\r\n        });\r\n        axios.get(\"https://api.themoviedb.org/3/movie/\"+movieId+\"/images?api_key=09848168e2201726ba2c5e6a70d11ac7&language=en-US,null\").then(response => {\r\n            img= response.data.posters[0]?response.data.posters[0].file_path:response.data.backdrops[0].file_path;\r\n            console.log(img);\r\n            console.log(response.data);\r\n            setMovies(movies.concat(new MovieModel(results[index].title, MovieLength ,img,director,actor)));\r\n        });\r\n\r\n        axios.get(\"https://api.themoviedb.org/3/movie/\"+movieId+\"/credits?api_key=09848168e2201726ba2c5e6a70d11ac7&language=en-US\").then(response => {\r\n            actor= response.data.cast.filter((person, index) => index > 5 ?null:person.name +\" (\"+ person.character+\")\");\r\n            director = response.data.crew.filter((person) => person.known_for_department ===\"Directing\" ? person.name: null)\r\n            console.log(actor);\r\n            console.log(director);\r\n            setMovies(movies.concat(new MovieModel(results[index].title, MovieLength ,img,director,actor)));\r\n        });\r\n\r\n        setResults([]);\r\n        setSearchText(\"\");\r\n    }\r\n\r\n    return (\r\n        <Container className=\"p-actors\">\r\n                <Form.Row>\r\n                    <Form.Group sm={10} as={Col} controlId=\"formGridCity\">\r\n                        <Form.Control value={filterText} placeholder={`filter by actors`} onChange={(e) => setfilterText(e.target.value)}/>\r\n                    </Form.Group>\r\n                    <Form.Group sm={2} as={Col} controlId=\"formGridState\">\r\n                        <Form.Control as=\"select\" value={sortBy} onChange={e => setSortBy(e.target.value)} >\r\n                            <option value=\"fname\">First Name</option>\r\n                            <option value=\"lname\">Last Name</option>\r\n                            <option value=\"age\">Age</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Row>\r\n                   {filteredActors.map((actor, index) => <Col lg={3} md={6}><ActorCard key={index} actor={actor}/></Col>)}\r\n                </Row>\r\n                <SearchBox\r\n                    placeholder=\"Search a movie...\"\r\n                    searchText={searchText}\r\n                    onSearchChange={handleSearchChange}\r\n                    results={results.map(result => result.original_title)}\r\n                    onResultSelected={addMovie}/>\r\n                <Row className=\"movie-row\">\r\n                    {movies.map(movie => <Col lg={12}><MovieCard movie={movie}/></Col>)}\r\n                </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ActorsPage from './pages/ActorsPage/ActorsPage';\n\n\nfunction App() {\n  return(\n      <div className=\"App\">\n        <ActorsPage/>\n     </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}